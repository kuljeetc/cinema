/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cinema;

import java.awt.Rectangle;
import java.io.File;
import java.io.IOException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Kuljeet
 */
public class MainWindow extends javax.swing.JFrame
{
    /**
     * Creates new form MainWindow
     */
    @SuppressWarnings("unchecked")
    public MainWindow() throws IOException
    {
        cinemaProperties = CinemaProperties.GetCinemaProperties();
        
        this.snModel = new SpinnerNumberModel(0,0,0,1);
        
        this.movieListDatabase = new MovieListDatabase(cinemaProperties.getMovieList(), this);
      
        this.movieImageDatabase = new MovieImageDatabase(cinemaProperties.getMovieImageList(), this);

        this.movieSchedule = new MovieSchedule(cinemaProperties.getMovieScheduleList(), this);
        this.movieScheduleFormatter = new MovieScheduleFormatter(this.movieSchedule, this.movieImageDatabase);
        
        initComponents();
        this.movieList.setModel(movieListDatabase);
        this.transactionList.setModel(transactionDatabase);
        
        listMoviesBtnActionPerformed(null);
        
        this.setTitle("Cinema Simulation by Kuljeet Chhabra (GRE)");
        
        banner = new Banner(bannerLabel, cinemaProperties);
        banner.start();
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        topPanel = new javax.swing.JPanel();
        listMoviesBtn = new javax.swing.JButton();
        showTimesBtn = new javax.swing.JButton();
        purchaseButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        movieSelectionBox = new javax.swing.JSpinner();
        showTransactions = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        showTimesPane = new javax.swing.JLayeredPane();
        showTimesLabel = new javax.swing.JLabel();
        scrollPanel = new javax.swing.JScrollPane();
        movieList = new javax.swing.JList<>();
        purchasePane = new javax.swing.JLayeredPane();
        purchasePaneMovieLabel = new javax.swing.JLabel();
        purchasePaneAdultLabel = new javax.swing.JLabel();
        purchasePaneChildLabel = new javax.swing.JLabel();
        purchasePaneStudentLabel = new javax.swing.JLabel();
        purchasePaneSeniorLabel = new javax.swing.JLabel();
        purchasePaneSeperator1 = new javax.swing.JSeparator();
        purchasePaneSeperator2 = new javax.swing.JSeparator();
        purchasePaneSeperator3 = new javax.swing.JSeparator();
        purchasePaneAdultTicketCount = new javax.swing.JComboBox<>();
        purchasePaneChildTicketCount = new javax.swing.JComboBox<>();
        purchasePaneStudentTicketCount = new javax.swing.JComboBox<>();
        purchasePaneSeniorTicketCount = new javax.swing.JComboBox<>();
        purchasePaneAdultPriceLabel = new javax.swing.JLabel();
        purchasePaneChildPriceLabel = new javax.swing.JLabel();
        purchasePaneStudentPriceLabel = new javax.swing.JLabel();
        purchasePaneSeniorPriceLabel = new javax.swing.JLabel();
        purchasePaneAdultTotalPriceLabel = new javax.swing.JLabel();
        purchasePaneChildTotalPriceLabel = new javax.swing.JLabel();
        purchasePaneStudentTotalPriceLabel = new javax.swing.JLabel();
        purchasePaneSeniorTotalPriceLabel = new javax.swing.JLabel();
        purchasePaneDaySelection = new javax.swing.JComboBox<>();
        purchasePaneTimeSelection = new javax.swing.JComboBox<>();
        purchasePaneRemainingSeats = new javax.swing.JLabel();
        purchasePaneTaxLabel = new javax.swing.JLabel();
        purchasePaneTotalLabel = new javax.swing.JLabel();
        purchasePaneCommitPurchaseBtn = new javax.swing.JButton();
        purchasePaneTaxTotalPriceLabel = new javax.swing.JLabel();
        purchasePaneTotalPriceLabel = new javax.swing.JLabel();
        purchasePaneCancelPurchaseBtn = new javax.swing.JButton();
        scrollPanelTxList = new javax.swing.JScrollPane();
        transactionList = new javax.swing.JList<>();
        bottomPanel = new javax.swing.JPanel();
        searchButton = new javax.swing.JButton();
        searchTextBox = new javax.swing.JTextField();
        bannerPanel = new javax.swing.JPanel();
        bannerLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Cinema Simulation by Kuljeet Chhabra (GRE)");
        setMaximumSize(new java.awt.Dimension(1000, 800));
        setMinimumSize(new java.awt.Dimension(1000, 800));
        setName("MainWindow"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1000, 800));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        topPanel.setMaximumSize(new java.awt.Dimension(1000, 50));
        topPanel.setMinimumSize(new java.awt.Dimension(1000, 50));
        topPanel.setPreferredSize(new java.awt.Dimension(1000, 50));
        topPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        listMoviesBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        listMoviesBtn.setText("List Movies");
        listMoviesBtn.setMargin(new java.awt.Insets(2, 2, 2, 2));
        listMoviesBtn.setMaximumSize(new java.awt.Dimension(130, 24));
        listMoviesBtn.setMinimumSize(new java.awt.Dimension(130, 24));
        listMoviesBtn.setPreferredSize(new java.awt.Dimension(130, 24));
        listMoviesBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                listMoviesBtnActionPerformed(evt);
            }
        });
        topPanel.add(listMoviesBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 14, -1, -1));

        showTimesBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        showTimesBtn.setText("Show Times");
        showTimesBtn.setMargin(new java.awt.Insets(2, 2, 2, 2));
        showTimesBtn.setMaximumSize(new java.awt.Dimension(130, 24));
        showTimesBtn.setMinimumSize(new java.awt.Dimension(130, 24));
        showTimesBtn.setPreferredSize(new java.awt.Dimension(130, 24));
        showTimesBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                showTimesBtnActionPerformed(evt);
            }
        });
        topPanel.add(showTimesBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 14, -1, -1));

        purchaseButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        purchaseButton.setText("Purchase Ticket");
        purchaseButton.setEnabled(false);
        purchaseButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
        purchaseButton.setMaximumSize(new java.awt.Dimension(130, 24));
        purchaseButton.setMinimumSize(new java.awt.Dimension(130, 24));
        purchaseButton.setPreferredSize(new java.awt.Dimension(130, 24));
        purchaseButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                purchaseButtonActionPerformed(evt);
            }
        });
        topPanel.add(purchaseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 14, -1, -1));

        refreshButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        refreshButton.setText("Reload Database");
        refreshButton.setToolTipText("");
        refreshButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
        refreshButton.setMaximumSize(new java.awt.Dimension(130, 24));
        refreshButton.setMinimumSize(new java.awt.Dimension(130, 24));
        refreshButton.setPreferredSize(new java.awt.Dimension(130, 24));
        refreshButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                refreshButtonActionPerformed(evt);
            }
        });
        topPanel.add(refreshButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 14, -1, -1));

        exitBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        exitBtn.setText("Exit");
        exitBtn.setMargin(new java.awt.Insets(2, 2, 2, 2));
        exitBtn.setMaximumSize(new java.awt.Dimension(130, 24));
        exitBtn.setMinimumSize(new java.awt.Dimension(130, 24));
        exitBtn.setPreferredSize(new java.awt.Dimension(130, 24));
        exitBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                exitBtnActionPerformed(evt);
            }
        });
        topPanel.add(exitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 14, -1, -1));

        movieSelectionBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        movieSelectionBox.setModel(snModel);
        movieSelectionBox.setMinimumSize(new java.awt.Dimension(50, 24));
        movieSelectionBox.setPreferredSize(new java.awt.Dimension(50, 24));
        movieSelectionBox.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                movieSelectionBoxStateChanged(evt);
            }
        });
        topPanel.add(movieSelectionBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 14, -1, -1));

        showTransactions.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        showTransactions.setText("Show Transactions");
        showTransactions.setMargin(new java.awt.Insets(2, 2, 2, 2));
        showTransactions.setMaximumSize(new java.awt.Dimension(130, 24));
        showTransactions.setMinimumSize(new java.awt.Dimension(130, 24));
        showTransactions.setPreferredSize(new java.awt.Dimension(130, 24));
        showTransactions.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                showTransactionsActionPerformed(evt);
            }
        });
        topPanel.add(showTransactions, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 14, -1, -1));

        getContentPane().add(topPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, -1, -1));

        mainPanel.setMaximumSize(new java.awt.Dimension(996, 490));
        mainPanel.setMinimumSize(new java.awt.Dimension(996, 490));
        mainPanel.setPreferredSize(new java.awt.Dimension(996, 490));
        mainPanel.setRequestFocusEnabled(false);
        mainPanel.setLayout(new java.awt.CardLayout());

        showTimesPane.setMinimumSize(new java.awt.Dimension(800, 500));

        showTimesLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        showTimesLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        showTimesLabel.setMaximumSize(new java.awt.Dimension(800, 496));
        showTimesLabel.setMinimumSize(new java.awt.Dimension(800, 496));
        showTimesLabel.setPreferredSize(new java.awt.Dimension(800, 496));

        showTimesPane.setLayer(showTimesLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout showTimesPaneLayout = new javax.swing.GroupLayout(showTimesPane);
        showTimesPane.setLayout(showTimesPaneLayout);
        showTimesPaneLayout.setHorizontalGroup(
            showTimesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(showTimesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        showTimesPaneLayout.setVerticalGroup(
            showTimesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(showTimesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        mainPanel.add(showTimesPane, "card4");

        scrollPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scrollPanel.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        scrollPanel.setMaximumSize(new java.awt.Dimension(1000, 500));
        scrollPanel.setMinimumSize(new java.awt.Dimension(1000, 500));
        scrollPanel.setPreferredSize(new java.awt.Dimension(1000, 500));

        movieList.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        movieList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        movieList.setFixedCellHeight(24);
        movieList.setVisibleRowCount(0);
        movieList.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseReleased(java.awt.event.MouseEvent evt)
            {
                movieListMouseReleased(evt);
            }
        });
        movieList.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                movieListKeyReleased(evt);
            }
        });
        movieList.addListSelectionListener(new javax.swing.event.ListSelectionListener()
        {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt)
            {
                movieListValueChanged(evt);
            }
        });
        scrollPanel.setViewportView(movieList);

        mainPanel.add(scrollPanel, "listPane");

        purchasePane.setMaximumSize(new java.awt.Dimension(800, 500));
        purchasePane.setMinimumSize(new java.awt.Dimension(800, 500));
        purchasePane.setPreferredSize(new java.awt.Dimension(800, 500));
        purchasePane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        purchasePaneMovieLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        purchasePaneMovieLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        purchasePaneMovieLabel.setMaximumSize(new java.awt.Dimension(960, 40));
        purchasePaneMovieLabel.setMinimumSize(new java.awt.Dimension(960, 40));
        purchasePaneMovieLabel.setPreferredSize(new java.awt.Dimension(960, 40));
        purchasePane.add(purchasePaneMovieLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        purchasePaneAdultLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        purchasePaneAdultLabel.setText("Adult");
        purchasePaneAdultLabel.setMaximumSize(new java.awt.Dimension(100, 24));
        purchasePaneAdultLabel.setMinimumSize(new java.awt.Dimension(100, 24));
        purchasePaneAdultLabel.setPreferredSize(new java.awt.Dimension(100, 24));
        purchasePane.add(purchasePaneAdultLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        purchasePaneChildLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        purchasePaneChildLabel.setText("Child");
        purchasePaneChildLabel.setMaximumSize(new java.awt.Dimension(100, 24));
        purchasePaneChildLabel.setMinimumSize(new java.awt.Dimension(100, 24));
        purchasePaneChildLabel.setPreferredSize(new java.awt.Dimension(100, 24));
        purchasePane.add(purchasePaneChildLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, -1, -1));

        purchasePaneStudentLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        purchasePaneStudentLabel.setText("Student");
        purchasePaneStudentLabel.setMaximumSize(new java.awt.Dimension(100, 24));
        purchasePaneStudentLabel.setMinimumSize(new java.awt.Dimension(100, 24));
        purchasePaneStudentLabel.setPreferredSize(new java.awt.Dimension(100, 24));
        purchasePane.add(purchasePaneStudentLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, -1, -1));

        purchasePaneSeniorLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        purchasePaneSeniorLabel.setText("Senior");
        purchasePaneSeniorLabel.setMaximumSize(new java.awt.Dimension(100, 24));
        purchasePaneSeniorLabel.setMinimumSize(new java.awt.Dimension(100, 24));
        purchasePaneSeniorLabel.setPreferredSize(new java.awt.Dimension(100, 24));
        purchasePane.add(purchasePaneSeniorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        purchasePaneSeperator1.setForeground(new java.awt.Color(0, 0, 0));
        purchasePane.add(purchasePaneSeperator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 960, 2));

        purchasePaneSeperator2.setForeground(new java.awt.Color(0, 0, 0));
        purchasePane.add(purchasePaneSeperator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 960, 2));

        purchasePaneSeperator3.setForeground(new java.awt.Color(0, 0, 0));
        purchasePane.add(purchasePaneSeperator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, 960, 2));

        purchasePaneAdultTicketCount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        purchasePaneAdultTicketCount.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        purchasePaneAdultTicketCount.setMaximumSize(new java.awt.Dimension(44, 24));
        purchasePaneAdultTicketCount.setMinimumSize(new java.awt.Dimension(44, 24));
        purchasePaneAdultTicketCount.setPreferredSize(new java.awt.Dimension(44, 24));
        purchasePaneAdultTicketCount.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                purchasePaneAdultTicketCountActionPerformed(evt);
            }
        });
        purchasePane.add(purchasePaneAdultTicketCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 140, -1, -1));

        purchasePaneChildTicketCount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        purchasePaneChildTicketCount.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        purchasePaneChildTicketCount.setMaximumSize(new java.awt.Dimension(44, 24));
        purchasePaneChildTicketCount.setMinimumSize(new java.awt.Dimension(44, 24));
        purchasePaneChildTicketCount.setPreferredSize(new java.awt.Dimension(44, 24));
        purchasePaneChildTicketCount.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                purchasePaneChildTicketCountActionPerformed(evt);
            }
        });
        purchasePane.add(purchasePaneChildTicketCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 190, -1, -1));

        purchasePaneStudentTicketCount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        purchasePaneStudentTicketCount.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        purchasePaneStudentTicketCount.setMaximumSize(new java.awt.Dimension(44, 24));
        purchasePaneStudentTicketCount.setMinimumSize(new java.awt.Dimension(44, 24));
        purchasePaneStudentTicketCount.setPreferredSize(new java.awt.Dimension(44, 24));
        purchasePaneStudentTicketCount.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                purchasePaneStudentTicketCountActionPerformed(evt);
            }
        });
        purchasePane.add(purchasePaneStudentTicketCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 240, -1, -1));

        purchasePaneSeniorTicketCount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        purchasePaneSeniorTicketCount.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        purchasePaneSeniorTicketCount.setMaximumSize(new java.awt.Dimension(44, 24));
        purchasePaneSeniorTicketCount.setMinimumSize(new java.awt.Dimension(44, 24));
        purchasePaneSeniorTicketCount.setPreferredSize(new java.awt.Dimension(44, 24));
        purchasePaneSeniorTicketCount.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                purchasePaneSeniorTicketCountActionPerformed(evt);
            }
        });
        purchasePane.add(purchasePaneSeniorTicketCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 290, -1, -1));

        purchasePaneAdultPriceLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        purchasePaneAdultPriceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        purchasePaneAdultPriceLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        purchasePaneAdultPriceLabel.setMaximumSize(new java.awt.Dimension(100, 24));
        purchasePaneAdultPriceLabel.setMinimumSize(new java.awt.Dimension(100, 24));
        purchasePaneAdultPriceLabel.setPreferredSize(new java.awt.Dimension(100, 24));
        purchasePane.add(purchasePaneAdultPriceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, -1, -1));

        purchasePaneChildPriceLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        purchasePaneChildPriceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        purchasePaneChildPriceLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        purchasePaneChildPriceLabel.setMaximumSize(new java.awt.Dimension(100, 24));
        purchasePaneChildPriceLabel.setMinimumSize(new java.awt.Dimension(100, 24));
        purchasePaneChildPriceLabel.setPreferredSize(new java.awt.Dimension(100, 24));
        purchasePane.add(purchasePaneChildPriceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 190, -1, -1));

        purchasePaneStudentPriceLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        purchasePaneStudentPriceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        purchasePaneStudentPriceLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        purchasePaneStudentPriceLabel.setMaximumSize(new java.awt.Dimension(100, 24));
        purchasePaneStudentPriceLabel.setMinimumSize(new java.awt.Dimension(100, 24));
        purchasePaneStudentPriceLabel.setPreferredSize(new java.awt.Dimension(100, 24));
        purchasePane.add(purchasePaneStudentPriceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 240, -1, -1));

        purchasePaneSeniorPriceLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        purchasePaneSeniorPriceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        purchasePaneSeniorPriceLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        purchasePaneSeniorPriceLabel.setMaximumSize(new java.awt.Dimension(100, 24));
        purchasePaneSeniorPriceLabel.setMinimumSize(new java.awt.Dimension(100, 24));
        purchasePaneSeniorPriceLabel.setPreferredSize(new java.awt.Dimension(100, 24));
        purchasePane.add(purchasePaneSeniorPriceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 290, -1, -1));

        purchasePaneAdultTotalPriceLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        purchasePaneAdultTotalPriceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        purchasePaneAdultTotalPriceLabel.setText("£0.00");
        purchasePaneAdultTotalPriceLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        purchasePaneAdultTotalPriceLabel.setMaximumSize(new java.awt.Dimension(120, 24));
        purchasePaneAdultTotalPriceLabel.setMinimumSize(new java.awt.Dimension(120, 24));
        purchasePaneAdultTotalPriceLabel.setPreferredSize(new java.awt.Dimension(120, 24));
        purchasePane.add(purchasePaneAdultTotalPriceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 140, -1, -1));

        purchasePaneChildTotalPriceLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        purchasePaneChildTotalPriceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        purchasePaneChildTotalPriceLabel.setText("£0.00");
        purchasePaneChildTotalPriceLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        purchasePaneChildTotalPriceLabel.setMaximumSize(new java.awt.Dimension(120, 24));
        purchasePaneChildTotalPriceLabel.setMinimumSize(new java.awt.Dimension(120, 24));
        purchasePaneChildTotalPriceLabel.setPreferredSize(new java.awt.Dimension(120, 24));
        purchasePane.add(purchasePaneChildTotalPriceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 190, -1, -1));

        purchasePaneStudentTotalPriceLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        purchasePaneStudentTotalPriceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        purchasePaneStudentTotalPriceLabel.setText("£0.00");
        purchasePaneStudentTotalPriceLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        purchasePaneStudentTotalPriceLabel.setMaximumSize(new java.awt.Dimension(120, 24));
        purchasePaneStudentTotalPriceLabel.setMinimumSize(new java.awt.Dimension(120, 24));
        purchasePaneStudentTotalPriceLabel.setPreferredSize(new java.awt.Dimension(120, 24));
        purchasePane.add(purchasePaneStudentTotalPriceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 240, -1, -1));

        purchasePaneSeniorTotalPriceLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        purchasePaneSeniorTotalPriceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        purchasePaneSeniorTotalPriceLabel.setText("£0.00");
        purchasePaneSeniorTotalPriceLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        purchasePaneSeniorTotalPriceLabel.setMaximumSize(new java.awt.Dimension(120, 24));
        purchasePaneSeniorTotalPriceLabel.setMinimumSize(new java.awt.Dimension(120, 24));
        purchasePaneSeniorTotalPriceLabel.setPreferredSize(new java.awt.Dimension(120, 24));
        purchasePane.add(purchasePaneSeniorTotalPriceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 290, -1, -1));

        purchasePaneDaySelection.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        purchasePaneDaySelection.setMaximumRowCount(10);
        purchasePaneDaySelection.setMaximumSize(new java.awt.Dimension(200, 24));
        purchasePaneDaySelection.setMinimumSize(new java.awt.Dimension(200, 24));
        purchasePaneDaySelection.setPreferredSize(new java.awt.Dimension(200, 24));
        purchasePaneDaySelection.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                purchasePaneDaySelectionActionPerformed(evt);
            }
        });
        purchasePane.add(purchasePaneDaySelection, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, -1));

        purchasePaneTimeSelection.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        purchasePaneTimeSelection.setMaximumRowCount(10);
        purchasePaneTimeSelection.setMaximumSize(new java.awt.Dimension(200, 24));
        purchasePaneTimeSelection.setMinimumSize(new java.awt.Dimension(200, 24));
        purchasePaneTimeSelection.setPreferredSize(new java.awt.Dimension(200, 24));
        purchasePaneTimeSelection.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                purchasePaneTimeSelectionActionPerformed(evt);
            }
        });
        purchasePane.add(purchasePaneTimeSelection, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 70, -1, -1));

        purchasePaneRemainingSeats.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        purchasePaneRemainingSeats.setMaximumSize(new java.awt.Dimension(400, 24));
        purchasePaneRemainingSeats.setMinimumSize(new java.awt.Dimension(400, 24));
        purchasePaneRemainingSeats.setPreferredSize(new java.awt.Dimension(400, 24));
        purchasePane.add(purchasePaneRemainingSeats, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 70, -1, -1));

        purchasePaneTaxLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        purchasePaneTaxLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        purchasePaneTaxLabel.setText("VAT @ 20% (included in price)");
        purchasePaneTaxLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        purchasePaneTaxLabel.setMaximumSize(new java.awt.Dimension(250, 24));
        purchasePaneTaxLabel.setMinimumSize(new java.awt.Dimension(250, 24));
        purchasePaneTaxLabel.setPreferredSize(new java.awt.Dimension(250, 24));
        purchasePane.add(purchasePaneTaxLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 350, -1, -1));

        purchasePaneTotalLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        purchasePaneTotalLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        purchasePaneTotalLabel.setText("Total Price");
        purchasePaneTotalLabel.setMaximumSize(new java.awt.Dimension(100, 24));
        purchasePaneTotalLabel.setMinimumSize(new java.awt.Dimension(100, 24));
        purchasePaneTotalLabel.setPreferredSize(new java.awt.Dimension(100, 24));
        purchasePane.add(purchasePaneTotalLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 400, -1, -1));

        purchasePaneCommitPurchaseBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        purchasePaneCommitPurchaseBtn.setText("Buy Now");
        purchasePaneCommitPurchaseBtn.setMaximumSize(new java.awt.Dimension(130, 24));
        purchasePaneCommitPurchaseBtn.setMinimumSize(new java.awt.Dimension(130, 24));
        purchasePaneCommitPurchaseBtn.setPreferredSize(new java.awt.Dimension(130, 24));
        purchasePaneCommitPurchaseBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                purchasePaneCommitPurchaseBtnActionPerformed(evt);
            }
        });
        purchasePane.add(purchasePaneCommitPurchaseBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 465, -1, -1));

        purchasePaneTaxTotalPriceLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        purchasePaneTaxTotalPriceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        purchasePaneTaxTotalPriceLabel.setText("£0.00");
        purchasePaneTaxTotalPriceLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        purchasePaneTaxTotalPriceLabel.setMaximumSize(new java.awt.Dimension(120, 24));
        purchasePaneTaxTotalPriceLabel.setMinimumSize(new java.awt.Dimension(120, 24));
        purchasePaneTaxTotalPriceLabel.setPreferredSize(new java.awt.Dimension(120, 24));
        purchasePane.add(purchasePaneTaxTotalPriceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 350, -1, -1));

        purchasePaneTotalPriceLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        purchasePaneTotalPriceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        purchasePaneTotalPriceLabel.setText("£0.00");
        purchasePaneTotalPriceLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        purchasePaneTotalPriceLabel.setMaximumSize(new java.awt.Dimension(120, 24));
        purchasePaneTotalPriceLabel.setMinimumSize(new java.awt.Dimension(120, 24));
        purchasePaneTotalPriceLabel.setPreferredSize(new java.awt.Dimension(120, 24));
        purchasePaneTotalPriceLabel.addPropertyChangeListener(new java.beans.PropertyChangeListener()
        {
            public void propertyChange(java.beans.PropertyChangeEvent evt)
            {
                purchasePaneTotalPriceLabelPropertyChange(evt);
            }
        });
        purchasePane.add(purchasePaneTotalPriceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 400, -1, -1));

        purchasePaneCancelPurchaseBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        purchasePaneCancelPurchaseBtn.setText("Cancel Purchase");
        purchasePaneCancelPurchaseBtn.setMargin(new java.awt.Insets(2, 2, 2, 2));
        purchasePaneCancelPurchaseBtn.setMaximumSize(new java.awt.Dimension(130, 24));
        purchasePaneCancelPurchaseBtn.setMinimumSize(new java.awt.Dimension(130, 24));
        purchasePaneCancelPurchaseBtn.setPreferredSize(new java.awt.Dimension(130, 24));
        purchasePaneCancelPurchaseBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                purchasePaneCancelPurchaseBtnActionPerformed(evt);
            }
        });
        purchasePane.add(purchasePaneCancelPurchaseBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 465, -1, -1));

        mainPanel.add(purchasePane, "purchasePane");

        scrollPanelTxList.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scrollPanelTxList.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        scrollPanelTxList.setMaximumSize(new java.awt.Dimension(800, 500));
        scrollPanelTxList.setMinimumSize(new java.awt.Dimension(800, 500));
        scrollPanelTxList.setPreferredSize(new java.awt.Dimension(800, 500));

        transactionList.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        transactionList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        transactionList.setFixedCellHeight(16);
        transactionList.setVisibleRowCount(0);
        transactionList.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseReleased(java.awt.event.MouseEvent evt)
            {
                transactionListMouseReleased(evt);
            }
        });
        transactionList.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                transactionListKeyReleased(evt);
            }
        });
        transactionList.addListSelectionListener(new javax.swing.event.ListSelectionListener()
        {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt)
            {
                transactionListValueChanged(evt);
            }
        });
        scrollPanelTxList.setViewportView(transactionList);

        mainPanel.add(scrollPanelTxList, "txPane");

        getContentPane().add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, -1, -1));

        bottomPanel.setMaximumSize(new java.awt.Dimension(1000, 40));
        bottomPanel.setMinimumSize(new java.awt.Dimension(1000, 40));
        bottomPanel.setPreferredSize(new java.awt.Dimension(1000, 40));
        bottomPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchButton.setText("Search");
        searchButton.setMargin(new java.awt.Insets(2, 8, 2, 8));
        searchButton.setMaximumSize(new java.awt.Dimension(120, 24));
        searchButton.setMinimumSize(new java.awt.Dimension(120, 24));
        searchButton.setPreferredSize(new java.awt.Dimension(120, 24));
        searchButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                searchButtonActionPerformed(evt);
            }
        });
        bottomPanel.add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 12, -1, -1));

        searchTextBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchTextBox.setToolTipText("Search for movie by name, genre or rating");
        searchTextBox.setMaximumSize(new java.awt.Dimension(240, 24));
        searchTextBox.setMinimumSize(new java.awt.Dimension(240, 24));
        searchTextBox.setPreferredSize(new java.awt.Dimension(240, 24));
        searchTextBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                searchTextBoxActionPerformed(evt);
            }
        });
        bottomPanel.add(searchTextBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 12, -1, -1));

        getContentPane().add(bottomPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 720, -1, -1));

        bannerPanel.setMaximumSize(new java.awt.Dimension(1000, 180));
        bannerPanel.setMinimumSize(new java.awt.Dimension(1000, 180));
        bannerPanel.setPreferredSize(new java.awt.Dimension(1000, 180));
        bannerPanel.setLayout(new java.awt.GridLayout());
        bannerPanel.add(bannerLabel);
        bannerLabel.getAccessibleContext().setAccessibleName("");

        getContentPane().add(bannerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void movieListValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_movieListValueChanged
    {//GEN-HEADEREND:event_movieListValueChanged
        if(movieList.getSelectedIndex() < 2)
        {
            if(movieList.getModel().getSize() == 2)
                movieList.clearSelection();
            else
                movieList.setSelectedIndex(2);
        }
        
        if(movieList.getSelectedIndex() < 0)
            movieSelectionBox.setValue(0);
        else 
            movieSelectionBox.setValue(movieList.getSelectedIndex() - 1);
    }//GEN-LAST:event_movieListValueChanged

    private void listMoviesBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_listMoviesBtnActionPerformed
    {//GEN-HEADEREND:event_listMoviesBtnActionPerformed
        movieListDatabase.resetFilter();
        setDefaultSelectedItem();
        setListingVisible();
    }//GEN-LAST:event_listMoviesBtnActionPerformed

    private void setDefaultSelectedItem()
    {
        if(movieListDatabase.getSize() > 2)
        {
            snModel.setMinimum(1);
            snModel.setMaximum(movieListDatabase.getSize()-2);
            movieList.setSelectedIndex(2);
            movieSelectionBox.setValue(1);
        }
        else
        {
            snModel.setMinimum(0);
            snModel.setMaximum(0);
            movieSelectionBox.setValue(0);
        }
    }
    
    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        int result = JOptionPane.showConfirmDialog(this, 
                                                   "Are you sure to close the application", 
                                                   "Close Application", 
                                                   JOptionPane.YES_NO_OPTION, 
                                                   JOptionPane.QUESTION_MESSAGE);
        if(result == JOptionPane.YES_OPTION)
            System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_exitBtnActionPerformed
    {//GEN-HEADEREND:event_exitBtnActionPerformed
        this.formWindowClosing(null);
    }//GEN-LAST:event_exitBtnActionPerformed

    private void movieListKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_movieListKeyReleased
    {//GEN-HEADEREND:event_movieListKeyReleased
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER)
        {
            showMovieTiming();
        }
    }//GEN-LAST:event_movieListKeyReleased

    private void movieListMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_movieListMouseReleased
    {//GEN-HEADEREND:event_movieListMouseReleased
        if(evt.getClickCount() == 2) //Double click
        {
            showMovieTiming();
        }
    }//GEN-LAST:event_movieListMouseReleased

    private void showTimesBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_showTimesBtnActionPerformed
    {//GEN-HEADEREND:event_showTimesBtnActionPerformed
        showMovieTiming();
    }//GEN-LAST:event_showTimesBtnActionPerformed

    private void movieSelectionBoxStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_movieSelectionBoxStateChanged
    {//GEN-HEADEREND:event_movieSelectionBoxStateChanged
        movieList.setSelectedIndex( (int)movieSelectionBox.getValue() + 1);
        Rectangle cellBounds = null;
        if(movieList.getSelectedIndex() < 20)
        {
             cellBounds = movieList.getCellBounds(0, 0);           
        }
        else
        {
            cellBounds = movieList.getCellBounds(movieList.getSelectedIndex(), movieList.getSelectedIndex());
        }
        movieList.scrollRectToVisible(cellBounds);
    }//GEN-LAST:event_movieSelectionBoxStateChanged

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_searchButtonActionPerformed
    {//GEN-HEADEREND:event_searchButtonActionPerformed
        movieListDatabase.filterMovies(searchTextBox.getText());
        setDefaultSelectedItem();
        setListingVisible();
    }//GEN-LAST:event_searchButtonActionPerformed

    private void searchTextBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_searchTextBoxActionPerformed
    {//GEN-HEADEREND:event_searchTextBoxActionPerformed
        searchButtonActionPerformed(evt);
    }//GEN-LAST:event_searchTextBoxActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_refreshButtonActionPerformed
    {//GEN-HEADEREND:event_refreshButtonActionPerformed
        movieListDatabase.Refresh();
        movieSchedule.Refresh();
        movieImageDatabase.Refresh();
        setListingVisible();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void purchaseButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_purchaseButtonActionPerformed
    {//GEN-HEADEREND:event_purchaseButtonActionPerformed
        setPurchaseVisible();
    }//GEN-LAST:event_purchaseButtonActionPerformed

    private File getTicketFilename()
    {
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("Specify a file to print the ticket");
        fc.setAcceptAllFileFilterUsed(false);
        fc.setFileFilter(new FileNameExtensionFilter("Text Document", "txt"));
        fc.setSelectedFile(new File("Receipt.txt"));
        int userSelection = fc.showSaveDialog(this);
 
        if (userSelection == JFileChooser.APPROVE_OPTION) 
        {
            return fc.getSelectedFile();
        }
        return null;
    }
      
    private void purchasePaneCommitPurchaseBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_purchasePaneCommitPurchaseBtnActionPerformed
    {//GEN-HEADEREND:event_purchasePaneCommitPurchaseBtnActionPerformed
        int reply = JOptionPane.showConfirmDialog(null, "Print the ticket?\n\n", "Print", JOptionPane.YES_NO_OPTION);
        String id = null;
        if (reply == JOptionPane.YES_OPTION) 
        {
            id = purchase.Commit(getTicketFilename(), this, transactionDatabase);
        }
        else 
        {
            id = purchase.Commit(null, this, transactionDatabase);
        }
        if(id == null || id.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Purchase failed\n\n",
                                                "Error", 
                                                JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Purchase successful\n\n" + 
                                                "Transaction Id: " + id + "\n\n",
                                                "Confirmation", 
                                                JOptionPane.INFORMATION_MESSAGE);
            allocateSeats(purchase.getTotalCount());
        }
        setListingVisible();
    }//GEN-LAST:event_purchasePaneCommitPurchaseBtnActionPerformed

    private void purchasePaneDaySelectionActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_purchasePaneDaySelectionActionPerformed
    {//GEN-HEADEREND:event_purchasePaneDaySelectionActionPerformed
        setTimingSelection();
        setPurchaseDateTime();
    }//GEN-LAST:event_purchasePaneDaySelectionActionPerformed
 
    private void purchasePaneAdultTicketCountActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_purchasePaneAdultTicketCountActionPerformed
    {//GEN-HEADEREND:event_purchasePaneAdultTicketCountActionPerformed
        if(purchase == null) return;
        purchase.setAdultCount((String)purchasePaneAdultTicketCount.getSelectedItem());
        purchasePaneAdultTotalPriceLabel.setText(df2.format(purchase.getTotalAdultPrice()));
        updateChildSelection();
        updatePriceTotal();
    }//GEN-LAST:event_purchasePaneAdultTicketCountActionPerformed

    private void purchasePaneChildTicketCountActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_purchasePaneChildTicketCountActionPerformed
    {//GEN-HEADEREND:event_purchasePaneChildTicketCountActionPerformed
        if(purchase == null) return;
        purchase.setChildCount((String)purchasePaneChildTicketCount.getSelectedItem());
        purchasePaneChildTotalPriceLabel.setText(df2.format(purchase.getTotalChildPrice()));
        updatePriceTotal();
    }//GEN-LAST:event_purchasePaneChildTicketCountActionPerformed

    private void purchasePaneStudentTicketCountActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_purchasePaneStudentTicketCountActionPerformed
    {//GEN-HEADEREND:event_purchasePaneStudentTicketCountActionPerformed
        if(purchase == null) return;
        purchase.setStudentCount((String)purchasePaneStudentTicketCount.getSelectedItem());
        purchasePaneStudentTotalPriceLabel.setText(df2.format(purchase.getTotalStudentPrice()));
        updatePriceTotal();
    }//GEN-LAST:event_purchasePaneStudentTicketCountActionPerformed

    private void purchasePaneSeniorTicketCountActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_purchasePaneSeniorTicketCountActionPerformed
    {//GEN-HEADEREND:event_purchasePaneSeniorTicketCountActionPerformed
        if(purchase == null) return;
        purchase.setSeniorCount((String)purchasePaneSeniorTicketCount.getSelectedItem());
        purchasePaneSeniorTotalPriceLabel.setText(df2.format(purchase.getTotalSeniorPrice()));
        updateChildSelection();
        updatePriceTotal();
    }//GEN-LAST:event_purchasePaneSeniorTicketCountActionPerformed

    private void purchasePaneTotalPriceLabelPropertyChange(java.beans.PropertyChangeEvent evt)//GEN-FIRST:event_purchasePaneTotalPriceLabelPropertyChange
    {//GEN-HEADEREND:event_purchasePaneTotalPriceLabelPropertyChange
        updateCommitPurchaseButton();
    }//GEN-LAST:event_purchasePaneTotalPriceLabelPropertyChange

    private void purchasePaneTimeSelectionActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_purchasePaneTimeSelectionActionPerformed
    {//GEN-HEADEREND:event_purchasePaneTimeSelectionActionPerformed
        setPurchaseDateTime();
    }//GEN-LAST:event_purchasePaneTimeSelectionActionPerformed

    private void showTransactionsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_showTransactionsActionPerformed
    {//GEN-HEADEREND:event_showTransactionsActionPerformed
        setTransactionListVisible();
    }//GEN-LAST:event_showTransactionsActionPerformed

    private void transactionListMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_transactionListMouseReleased
    {//GEN-HEADEREND:event_transactionListMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_transactionListMouseReleased

    private void transactionListKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_transactionListKeyReleased
    {//GEN-HEADEREND:event_transactionListKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_transactionListKeyReleased

    private void transactionListValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_transactionListValueChanged
    {//GEN-HEADEREND:event_transactionListValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_transactionListValueChanged

    private void purchasePaneCancelPurchaseBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_purchasePaneCancelPurchaseBtnActionPerformed
    {//GEN-HEADEREND:event_purchasePaneCancelPurchaseBtnActionPerformed
        int result = JOptionPane.showConfirmDialog(this, 
                                                   "Are you sure to cancel the purchase", 
                                                   "Cancel puchase", 
                                                   JOptionPane.YES_NO_OPTION, 
                                                   JOptionPane.QUESTION_MESSAGE);
        if(result == JOptionPane.YES_OPTION)
            listMoviesBtnActionPerformed(evt);
    }//GEN-LAST:event_purchasePaneCancelPurchaseBtnActionPerformed

    private void updateCommitPurchaseButton()
    {
        boolean enable = purchase != null 
                         && (purchase.getTotalPrice() > 0.0) 
                         && (purchase.getTime() != null 
                         && seatDatabase.isSeatAvailable(getMovieTimeHashCode(), purchase.getTotalCount()));
        
        purchasePaneCommitPurchaseBtn.setEnabled(enable);
    }
    
    private void setPurchaseDateTime()
    {
        if(purchase != null)
        {
            String time = ((String)purchasePaneTimeSelection.getSelectedItem());
            if( time.equalsIgnoreCase("No show schedule") )
                time = null;
            purchase.setTime(time);
            
            purchase.setDate(getSelectedPurchaseDate());
                    
            setRemainingTicket();
            
            updateCommitPurchaseButton();
        }
    }
    
    private void updateChildSelection()
    {
        
        Movie m = movieListDatabase.getMovie(movieList.getSelectedIndex(), this);
        if((purchase.getAdultCount() + purchase.getSeniorCount()) > 0)
        {
            purchasePaneChildTicketCount.setEnabled(m.isChildSafeWithAdult());
        }
        else
        {
            purchasePaneChildTicketCount.setEnabled(m.isChildSafe());
        }
        if(!purchasePaneChildTicketCount.isEnabled())
        {
            purchasePaneChildTicketCount.setSelectedItem("0");
            purchasePaneChildTicketCountActionPerformed(null);
        }
    }
    
    
    private void showMovieTiming()
    {
        Movie m = movieListDatabase.getMovie(movieList.getSelectedIndex(), this);
        showTimesLabel.setText(movieScheduleFormatter.format(m));
        setTimingVisible();
    }
    
    private void setListingVisible()
    {
        showTimesPane.setVisible(false);
        purchasePane.setVisible(false);
        scrollPanelTxList.setVisible(false);
        resetPurchasePane();
        
        movieSelectionBox.setEnabled(true);
        showTimesBtn.setEnabled(true);
        purchaseButton.setEnabled(false);
        
        scrollPanel.setVisible(true);
    }
    
    private void setTimingVisible()
    {
        scrollPanel.setVisible(false);
        purchasePane.setVisible(false);
        scrollPanelTxList.setVisible(false);
        resetPurchasePane();
                
        movieSelectionBox.setEnabled(false);
        showTimesBtn.setEnabled(false);
        purchaseButton.setEnabled(true);
        
        showTimesPane.setVisible(true);
    }
    
    private void setPurchaseVisible()
    {
        scrollPanel.setVisible(false);
        showTimesPane.setVisible(false);
        scrollPanelTxList.setVisible(false);
         
        movieSelectionBox.setEnabled(false);
        showTimesBtn.setEnabled(false);
        purchaseButton.setEnabled(false);
        
        populatePurchasePane();
        purchasePane.setVisible(true);
    }
    
    private void setTransactionListVisible()
    {
        scrollPanel.setVisible(false);
        purchasePane.setVisible(false);
        showTimesPane.setVisible(false);
        resetPurchasePane();
                
        movieSelectionBox.setEnabled(false);
        showTimesBtn.setEnabled(false);
        purchaseButton.setEnabled(false);
        
        scrollPanelTxList.setVisible(true);
    }
    
    @SuppressWarnings("unchecked")
    private void populatePurchasePane()
    {
        Movie m = movieListDatabase.getMovie(movieList.getSelectedIndex(), this);
        purchase = new Purchase(m, cinemaProperties);
        
        purchasePaneMovieLabel.setText(m.getFormattedString(0));
        
        purchasePaneDaySelection.setModel(new DefaultComboBoxModel(getDays()));
        setTimingSelection();
        
        purchasePaneAdultPriceLabel.setText(df2.format(cinemaProperties.AdultPrice()));
        purchasePaneChildPriceLabel.setText(df2.format(cinemaProperties.ChildPrice()));
        purchasePaneStudentPriceLabel.setText(df2.format(cinemaProperties.StudentPrice()));
        purchasePaneSeniorPriceLabel.setText(df2.format(cinemaProperties.SeniorPrice()));
        
        setRemainingTicket();
        
        purchasePaneChildTicketCount.setEnabled(m.isChildSafe());
        setPurchaseDateTime();
    }
    
    private void resetPurchasePane()
    {
        purchasePaneAdultTicketCount.setSelectedItem("0");
        purchasePaneChildTicketCount.setSelectedItem("0");
        purchasePaneStudentTicketCount.setSelectedItem("0");
        purchasePaneSeniorTicketCount.setSelectedItem("0");
        purchase = null;
    }
    
    private void setRemainingTicket()
    {
        String val = ((String)purchasePaneTimeSelection.getSelectedItem());
        String count = "N/A";
        if( !val.equalsIgnoreCase("No show schedule") )
        {
            int hash = getMovieTimeHashCode();
            count = String.valueOf(seatDatabase.getRemainingSeats(hash));
        }
        purchasePaneRemainingSeats.setText("Seats available : " + count);
    }
    
    private void allocateSeats(int count)
    {
        int hash = getMovieTimeHashCode();
        seatDatabase.allocateSeats(hash, count);
    }
    
    @SuppressWarnings("unchecked")
    private void setTimingSelection()
    {
        Movie m = movieListDatabase.getMovie(movieList.getSelectedIndex(), this);
        ArrayList<String> timing = movieSchedule.getTimes(m.Id(), getSelectedPurchaseDay());
        if(timing == null || timing.isEmpty())
        {
            timing = new ArrayList<>();
            timing.add("No show schedule");
        }
        purchasePaneTimeSelection.setModel(new DefaultComboBoxModel(timing.toArray()));
    }
    
    private int getSelectedPurchaseDay()
    {
        Calendar calendar = Calendar.getInstance();
        int selectedDay = purchasePaneDaySelection.getSelectedIndex();
        
        calendar.add(Calendar.DAY_OF_WEEK, selectedDay);
        return calendar.get(Calendar.DAY_OF_WEEK);
    }
    
    private String getSelectedPurchaseDate()
    {
        Calendar calendar = Calendar.getInstance();
        int selectedDay = purchasePaneDaySelection.getSelectedIndex();
        
        calendar.add(Calendar.DAY_OF_WEEK, selectedDay);
        DateFormat df = new SimpleDateFormat("dd/MMM/yyyy");
        
        return df.format(calendar.getTime());
    }
    
    private String[] getDays()
    {
        String[] days = new String[7];
        
        Calendar calendar = Calendar.getInstance();
        DateFormat df = new SimpleDateFormat(" (dd/MMM/yyyy)");
        
        days[0] = "Today" + df.format(calendar.getTime());

        calendar.add(Calendar.DAY_OF_WEEK, 1);
        days[1] = "Tomorrow" + df.format(calendar.getTime());
        
        df = new SimpleDateFormat("EEEE (dd/MMM/yyyy)");
        for(int n = 2; n < 7; ++n)
        {
            calendar.add(Calendar.DAY_OF_WEEK, 1);
            days[n] = df.format(calendar.getTime());
        }
        return days;
    }
    
    private void updatePriceTotal()
    {
        double total = purchase.getTotalPrice();
        double tax = purchase.getTax();
        purchasePaneTaxTotalPriceLabel.setText(df2.format(tax));
        purchasePaneTotalPriceLabel.setText(df2.format(total));
    }
    
    public int getMovieTimeHashCode() 
    {
        Movie m = movieListDatabase.getMovie(movieList.getSelectedIndex(), this);
        String val = ((String)purchasePaneTimeSelection.getSelectedItem());
        
        int hash = 1;
        hash = hash * 17 + m.Name().hashCode();
        hash = hash * 31 + val.hashCode();
        return hash;
    }    
    
    private final SpinnerNumberModel snModel;

    private final MovieListDatabase movieListDatabase;

    private final MovieSchedule movieSchedule;
    private final MovieScheduleFormatter movieScheduleFormatter;

    private final MovieImageDatabase movieImageDatabase;
    
    private final CinemaProperties cinemaProperties;
    private Purchase purchase = null;
    
    private final TransactionDatabase transactionDatabase = new TransactionDatabase();
    
    private final Banner banner;
    
    private final SeatDatabase seatDatabase = new SeatDatabase();
    
    private final DecimalFormat df2 = new DecimalFormat("£#0.00");
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bannerLabel;
    private javax.swing.JPanel bannerPanel;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JButton exitBtn;
    private javax.swing.JButton listMoviesBtn;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JList<String> movieList;
    private javax.swing.JSpinner movieSelectionBox;
    private javax.swing.JButton purchaseButton;
    private javax.swing.JLayeredPane purchasePane;
    private javax.swing.JLabel purchasePaneAdultLabel;
    private javax.swing.JLabel purchasePaneAdultPriceLabel;
    private javax.swing.JComboBox<String> purchasePaneAdultTicketCount;
    private javax.swing.JLabel purchasePaneAdultTotalPriceLabel;
    private javax.swing.JButton purchasePaneCancelPurchaseBtn;
    private javax.swing.JLabel purchasePaneChildLabel;
    private javax.swing.JLabel purchasePaneChildPriceLabel;
    private javax.swing.JComboBox<String> purchasePaneChildTicketCount;
    private javax.swing.JLabel purchasePaneChildTotalPriceLabel;
    private javax.swing.JButton purchasePaneCommitPurchaseBtn;
    private javax.swing.JComboBox<String> purchasePaneDaySelection;
    private javax.swing.JLabel purchasePaneMovieLabel;
    private javax.swing.JLabel purchasePaneRemainingSeats;
    private javax.swing.JLabel purchasePaneSeniorLabel;
    private javax.swing.JLabel purchasePaneSeniorPriceLabel;
    private javax.swing.JComboBox<String> purchasePaneSeniorTicketCount;
    private javax.swing.JLabel purchasePaneSeniorTotalPriceLabel;
    private javax.swing.JSeparator purchasePaneSeperator1;
    private javax.swing.JSeparator purchasePaneSeperator2;
    private javax.swing.JSeparator purchasePaneSeperator3;
    private javax.swing.JLabel purchasePaneStudentLabel;
    private javax.swing.JLabel purchasePaneStudentPriceLabel;
    private javax.swing.JComboBox<String> purchasePaneStudentTicketCount;
    private javax.swing.JLabel purchasePaneStudentTotalPriceLabel;
    private javax.swing.JLabel purchasePaneTaxLabel;
    private javax.swing.JLabel purchasePaneTaxTotalPriceLabel;
    private javax.swing.JComboBox<String> purchasePaneTimeSelection;
    private javax.swing.JLabel purchasePaneTotalLabel;
    private javax.swing.JLabel purchasePaneTotalPriceLabel;
    private javax.swing.JButton refreshButton;
    private javax.swing.JScrollPane scrollPanel;
    private javax.swing.JScrollPane scrollPanelTxList;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTextBox;
    private javax.swing.JButton showTimesBtn;
    private javax.swing.JLabel showTimesLabel;
    private javax.swing.JLayeredPane showTimesPane;
    private javax.swing.JButton showTransactions;
    private javax.swing.JPanel topPanel;
    private javax.swing.JList<String> transactionList;
    // End of variables declaration//GEN-END:variables
}
